// Code generated by mockery v2.44.1. DO NOT EDIT.

package ccm

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// mockVolumePublisher is an autogenerated mock type for the VolumePublisher type
type mockVolumePublisher struct {
	mock.Mock
}

// Mount provides a mock function with given fields: ctx, meta
func (_m *mockVolumePublisher) Mount(ctx context.Context, meta *ClusterConfigMapMeta) error {
	ret := _m.Called(ctx, meta)

	if len(ret) == 0 {
		panic("no return value specified for Mount")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *ClusterConfigMapMeta) error); ok {
		r0 = rf(ctx, meta)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Populate provides a mock function with given fields: ctx, meta
func (_m *mockVolumePublisher) Populate(ctx context.Context, meta *ClusterConfigMapMeta) error {
	ret := _m.Called(ctx, meta)

	if len(ret) == 0 {
		panic("no return value specified for Populate")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *ClusterConfigMapMeta) error); ok {
		r0 = rf(ctx, meta)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// newMockVolumePublisher creates a new instance of mockVolumePublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockVolumePublisher(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockVolumePublisher {
	mock := &mockVolumePublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
